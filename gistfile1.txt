 I. Hello World
 A. English Major introduction
 i. Wikipedia definition: An operating system is software that manages computer hardware and software resources and provides common services for computer programs.
 ii. The OS is something that everyone is exposed to, but it remains mysterious.
 iii. List of things that are defined by the OS
 a) Input/Output
 b) Drivers
 c) Install/Update
 iv. "It's a UNIX system, I know this”
 a) http://www.tumblr.com/search/unix%20gif
 B. Short trip down memory lane
 i. The Sims
 a) The computer was like a suit: used, dirtied, taken to cleaners
 b) Sister erases system files, bricking the computer
 ii. XP netbook in college
 iii. CS50x and LaunchCode
 C. Thesis
 i. The what, the history, and the why of OS
 ii. UNIX's influence and pervasiveness (INTERNET)
 iii. Why it matters to me
 II. History (The how and the why)
 A. Early Hardware
 i. Toggles and knobs, paper tape and punch cards (then magnets!)
 ii. Colossus 
 a) http://www.colossus-computer.com/images/030109-01-1.jpg
 iii. Altair 8800
 a) http://en.wikipedia.org/wiki/Altair_8800#mediaviewer/File:Altair_8800_at_the_Computer_History_Museum,_cropped.jpg
 B. Machine Code and Assembly
 i. Binary calculators
 a) [8800 again, for switches]
 b) Each type of chip had different instruction set
 ii. Assembly as punch cards
 a) http://en.wikipedia.org/wiki/Punched_card#mediaviewer/File:IBM1130CopyCard.agr.jpg
 b) Assembly is abstraction from binary
 c) Many different dialects, for each instruction set
 C. Pre-OS innovations
 i. Faster computation
 ii. Signals to machine operators
 iii. Monitor programs
 D. TTY and timesharing
 i. http://heritageinmaine.blogspot.com/2011/10/not-hearing-history-at-governor-baxter.html
 ii. Multiple dumb terminals leads to time-sharing issue
 iii. Text-based interfaces (origin of “print”)
 III. UNIX
 A. Background
 i. Every machine had a custom OS
 a) combo of pre-OS innovations
 b) bundled monitor programs together with other utilities
 ii. No assembly programs could be ported
 B. UNIX in assembly, 1969 – 1971
 i. Dennis Ritchie and Ken Thompson
 a) http://cm.bell-labs.com/cm/cs/who/dmr/picture.html
 ii. The Notes
 a) http://cm.bell-labs.com/cm/cs/who/dmr/notes.html
 iii. Written for PDP-7, then PDP-11, in assembly 
 iv. PDP-11's bought to run UNIX
 C. UNIX in C, 1971 – onwards
 i. C programming language features
 a) Imperative/procedural
 b) Text-based source, compiled to many different assemblies
 ii. UNIX reimplemented in C, 1971 – 1973
 a) The language evolved with the OS
 b) UNIX learned more tricks
 iii. UNIX ported to other mainframes
 a) C compilers learned more assemblies
 b) UNIX code could be ported to them with little work
 c) Code could be shared far more easily
 D. BSD, Linux, and OS X
 i. Bell not allowed to get into computer business
 ii. UNIX cloning
 iii. BSD
 iv. Linux
 v. Darwin (OS X)
 E. UNIX today
 i. Desktops
 ii. Mobile/Embedded Devices
 iii. Servers/Containers
 iv. Supercomputers
 v. EVERYTHING
 IV. Conclusion
 A. http://en.wikipedia.org/wiki/Live_Free_or_Die#mediaviewer/File:Actual_DEC_UNIX_License_Plate_DSC_0317.jpg
 B. Wrapping up
 C. Antithesis: OS will continue to evolve, and UNIX with it